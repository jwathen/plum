// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static Plum.Controllers.AccountController Account = new Plum.Controllers.T4MVC_AccountController();
    public static Plum.Controllers.BusinessController Business = new Plum.Controllers.T4MVC_BusinessController();
    public static Plum.Controllers.CustomerController Customer = new Plum.Controllers.T4MVC_CustomerController();
    public static Plum.Controllers.HomeController Home = new Plum.Controllers.T4MVC_HomeController();
    public static Plum.Controllers.QueueController Queue = new Plum.Controllers.T4MVC_QueueController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Images {
            private const string URLPATH = "~/Content/Images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string favicon_png = Url("favicon.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Icons {
                private const string URLPATH = "~/Content/Images/Icons";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _120x120_png = Url("120x120.png");
                public static readonly string _128x128_png = Url("128x128.png");
                public static readonly string _152x152_png = Url("152x152.png");
                public static readonly string _256x256_png = Url("256x256.png");
                public static readonly string _384x384_png = Url("384x384.png");
                public static readonly string _512x512_png = Url("512x512.png");
                public static readonly string _64x64_png = Url("64x64.png");
                public static readonly string _76x76_png = Url("76x76.png");
                public static readonly string original_png = Url("original.png");
            }
        
            public static readonly string table_jpg = Url("table.jpg");
            public static readonly string testimonial1_jpg = Url("testimonial1.jpg");
            public static readonly string testimonial2_jpg = Url("testimonial2.jpg");
            public static readonly string testimonial3_jpg = Url("testimonial3.jpg");
            public static readonly string testimonial4_jpg = Url("testimonial4.jpg");
            public static readonly string testimonial5_jpg = Url("testimonial5.jpg");
            public static readonly string testimonial6_jpg = Url("testimonial6.jpg");
            public static readonly string testimonial7_jpg = Url("testimonial7.jpg");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Scripts {
            private const string URLPATH = "~/Content/Scripts";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Home {
                private const string URLPATH = "~/Content/Scripts/Home";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ContactUs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ContactUs.min.js") ? Url("ContactUs.min.js") : Url("ContactUs.js");
                public static readonly string ContactUs_es5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ContactUs.es5.min.js") ? Url("ContactUs.es5.min.js") : Url("ContactUs.es5.js");
                public static readonly string ContactUs_es5_min_js = Url("ContactUs.es5.min.js");
            }
        
            public static readonly string jquery_ui_touch_punch_improved_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.touch-punch-improved.min.js") ? Url("jquery.ui.touch-punch-improved.min.js") : Url("jquery.ui.touch-punch-improved.js");
            public static readonly string jquery_ui_touch_punch_improved_es5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.touch-punch-improved.es5.min.js") ? Url("jquery.ui.touch-punch-improved.es5.min.js") : Url("jquery.ui.touch-punch-improved.es5.js");
            public static readonly string jquery_ui_touch_punch_improved_es5_min_js = Url("jquery.ui.touch-punch-improved.es5.min.js");
            public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Queue {
                private const string URLPATH = "~/Content/Scripts/Queue";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Show_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Show.min.js") ? Url("Show.min.js") : Url("Show.js");
                public static readonly string Show_es5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Show.es5.min.js") ? Url("Show.es5.min.js") : Url("Show.es5.js");
                public static readonly string Show_es5_min_js = Url("Show.es5.min.js");
                public static readonly string ShowCustomer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ShowCustomer.min.js") ? Url("ShowCustomer.min.js") : Url("ShowCustomer.js");
                public static readonly string ShowCustomer_es5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ShowCustomer.es5.min.js") ? Url("ShowCustomer.es5.min.js") : Url("ShowCustomer.es5.js");
                public static readonly string ShowCustomer_es5_min_js = Url("ShowCustomer.es5.min.js");
            }
        
            public static readonly string Site_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Site.min.js") ? Url("Site.min.js") : Url("Site.js");
            public static readonly string Site_es5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Site.es5.min.js") ? Url("Site.es5.min.js") : Url("Site.es5.js");
            public static readonly string Site_es5_min_js = Url("Site.es5.min.js");
            public static readonly string Site_min_js = Url("Site.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Styles {
            private const string URLPATH = "~/Content/Styles";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class bootstrapsource {
                private const string URLPATH = "~/Content/Styles/bootstrapsource";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _bootstrap_compass_scss = Url("_bootstrap-compass.scss");
                public static readonly string _bootstrap_mincer_scss = Url("_bootstrap-mincer.scss");
                public static readonly string _bootstrap_sprockets_scss = Url("_bootstrap-sprockets.scss");
                public static readonly string _bootstrap_scss = Url("_bootstrap.scss");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class bootstrap {
                    private const string URLPATH = "~/Content/Styles/bootstrapsource/bootstrap";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string _alerts_scss = Url("_alerts.scss");
                    public static readonly string _badges_scss = Url("_badges.scss");
                    public static readonly string _breadcrumbs_scss = Url("_breadcrumbs.scss");
                    public static readonly string _button_groups_scss = Url("_button-groups.scss");
                    public static readonly string _buttons_scss = Url("_buttons.scss");
                    public static readonly string _carousel_scss = Url("_carousel.scss");
                    public static readonly string _close_scss = Url("_close.scss");
                    public static readonly string _code_scss = Url("_code.scss");
                    public static readonly string _component_animations_scss = Url("_component-animations.scss");
                    public static readonly string _dropdowns_scss = Url("_dropdowns.scss");
                    public static readonly string _forms_scss = Url("_forms.scss");
                    public static readonly string _glyphicons_scss = Url("_glyphicons.scss");
                    public static readonly string _grid_scss = Url("_grid.scss");
                    public static readonly string _input_groups_scss = Url("_input-groups.scss");
                    public static readonly string _jumbotron_scss = Url("_jumbotron.scss");
                    public static readonly string _labels_scss = Url("_labels.scss");
                    public static readonly string _list_group_scss = Url("_list-group.scss");
                    public static readonly string _media_scss = Url("_media.scss");
                    public static readonly string _mixins_scss = Url("_mixins.scss");
                    public static readonly string _modals_scss = Url("_modals.scss");
                    public static readonly string _navbar_scss = Url("_navbar.scss");
                    public static readonly string _navs_scss = Url("_navs.scss");
                    public static readonly string _normalize_scss = Url("_normalize.scss");
                    public static readonly string _pager_scss = Url("_pager.scss");
                    public static readonly string _pagination_scss = Url("_pagination.scss");
                    public static readonly string _panels_scss = Url("_panels.scss");
                    public static readonly string _popovers_scss = Url("_popovers.scss");
                    public static readonly string _print_scss = Url("_print.scss");
                    public static readonly string _progress_bars_scss = Url("_progress-bars.scss");
                    public static readonly string _responsive_embed_scss = Url("_responsive-embed.scss");
                    public static readonly string _responsive_utilities_scss = Url("_responsive-utilities.scss");
                    public static readonly string _scaffolding_scss = Url("_scaffolding.scss");
                    public static readonly string _tables_scss = Url("_tables.scss");
                    public static readonly string _theme_scss = Url("_theme.scss");
                    public static readonly string _thumbnails_scss = Url("_thumbnails.scss");
                    public static readonly string _tooltip_scss = Url("_tooltip.scss");
                    public static readonly string _type_scss = Url("_type.scss");
                    public static readonly string _utilities_scss = Url("_utilities.scss");
                    public static readonly string _variables_scss = Url("_variables.scss");
                    public static readonly string _wells_scss = Url("_wells.scss");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class mixins {
                        private const string URLPATH = "~/Content/Styles/bootstrapsource/bootstrap/mixins";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string _alerts_scss = Url("_alerts.scss");
                        public static readonly string _background_variant_scss = Url("_background-variant.scss");
                        public static readonly string _border_radius_scss = Url("_border-radius.scss");
                        public static readonly string _buttons_scss = Url("_buttons.scss");
                        public static readonly string _center_block_scss = Url("_center-block.scss");
                        public static readonly string _clearfix_scss = Url("_clearfix.scss");
                        public static readonly string _forms_scss = Url("_forms.scss");
                        public static readonly string _gradients_scss = Url("_gradients.scss");
                        public static readonly string _grid_framework_scss = Url("_grid-framework.scss");
                        public static readonly string _grid_scss = Url("_grid.scss");
                        public static readonly string _hide_text_scss = Url("_hide-text.scss");
                        public static readonly string _image_scss = Url("_image.scss");
                        public static readonly string _labels_scss = Url("_labels.scss");
                        public static readonly string _list_group_scss = Url("_list-group.scss");
                        public static readonly string _nav_divider_scss = Url("_nav-divider.scss");
                        public static readonly string _nav_vertical_align_scss = Url("_nav-vertical-align.scss");
                        public static readonly string _opacity_scss = Url("_opacity.scss");
                        public static readonly string _pagination_scss = Url("_pagination.scss");
                        public static readonly string _panels_scss = Url("_panels.scss");
                        public static readonly string _progress_bar_scss = Url("_progress-bar.scss");
                        public static readonly string _reset_filter_scss = Url("_reset-filter.scss");
                        public static readonly string _reset_text_scss = Url("_reset-text.scss");
                        public static readonly string _resize_scss = Url("_resize.scss");
                        public static readonly string _responsive_visibility_scss = Url("_responsive-visibility.scss");
                        public static readonly string _size_scss = Url("_size.scss");
                        public static readonly string _tab_focus_scss = Url("_tab-focus.scss");
                        public static readonly string _table_row_scss = Url("_table-row.scss");
                        public static readonly string _text_emphasis_scss = Url("_text-emphasis.scss");
                        public static readonly string _text_overflow_scss = Url("_text-overflow.scss");
                        public static readonly string _vendor_prefixes_scss = Url("_vendor-prefixes.scss");
                    }
                
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Business {
                private const string URLPATH = "~/Content/Styles/Business";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Show_scss = Url("Show.scss");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Home {
                private const string URLPATH = "~/Content/Styles/Home";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Index_scss = Url("Index.scss");
            }
        
            public static readonly string LoadingOverlay_scss = Url("LoadingOverlay.scss");
            public static readonly string Paper_scss = Url("Paper.scss");
            public static readonly string PaperVariables_scss = Url("PaperVariables.scss");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Queue {
                private const string URLPATH = "~/Content/Styles/Queue";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Show_scss = Url("Show.scss");
            }
        
            public static readonly string Site_scss = Url("Site.scss");
            public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
            public static readonly string Site_min_css = Url("Site.min.css");
        }
    
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Content 
        {
            public static partial class Images 
            {
                public static partial class Icons 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class Scripts 
            {
                public static partial class Home 
                {
                    public static class Assets
                    {
                        public const string ContactUs_js = "~/Content/Scripts/Home/ContactUs.js"; 
                    }
                }
                public static partial class Queue 
                {
                    public static class Assets
                    {
                        public const string Show_js = "~/Content/Scripts/Queue/Show.js"; 
                        public const string ShowCustomer_js = "~/Content/Scripts/Queue/ShowCustomer.js"; 
                    }
                }
                public static class Assets
                {
                    public const string jquery_ui_touch_punch_improved_js = "~/Content/Scripts/jquery.ui.touch-punch-improved.js"; 
                    public const string jquery_unobtrusive_ajax_min_js = "~/Content/Scripts/jquery.unobtrusive-ajax.min.js"; 
                    public const string Site_js = "~/Content/Scripts/Site.js"; 
                }
            }
            public static partial class Styles 
            {
                public static partial class bootstrapsource 
                {
                    public static partial class bootstrap 
                    {
                        public static partial class mixins 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class Business 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class Home 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class Queue 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


