@model Plum.Models.Queue
@using Plum.ViewModels.Customer
@{
    ViewBag.Title = "Show";
}
<div class="container">
    <h3>@Model.Business.Name</h3>
    <p class="hidden-md hidden-lg">
        <button class="btn btn-block btn-primary" data-toggle="modal" data-target="#CreateCustomerModal">
            <i class="fa fa-plus"></i>
            Add Party
        </button>
        <button class="btn btn-block btn-default" data-command="rearrange" style="@(Model.Customers.Count < 2 ? "display:none;" : null)">
            <i class="fa fa-list"></i>
            <span>Reorder List</span>
        </button>
    </p>
    <p class="hidden-sm hidden-xs">
        <button class="btn btn-primary" data-toggle="modal" data-target="#CreateCustomerModal">
            <i class="fa fa-plus"></i>
            Add Party
        </button>
        <button class="btn btn-default" data-command="rearrange" style="@(Model.Customers.Count < 2 ? "display:none;" : null)">
            <i class="fa fa-list"></i>
            <span>Reorder List</span>
        </button>
    </p>
    <div id="businessViewQueueList">
        @Html.Partial(MVC.Queue.Views.BusinessViewQueueList, Model)
    </div>
</div>
<div id="ShowCustomerModal" class="modal">
</div>
<div id="CreateCustomerModal" class="modal">
    @Html.Partial(MVC.Customer.Views.Create, new CustomerViewModel { QueueId = Model.Id })
</div>

@section Scripts {
    <script>
        window.viewData = {};
        window.viewData.queueId = @Model.Id;
        window.viewData.sortingDebounce = 500;
        window.viewData.sortQueueUrl = '@Url.Action(MVC.Queue.Sort())';
        window.viewData.udpateBusinessViewQueueListUrl = '@Url.Action(MVC.Queue.BusinessViewQueueList())';
        window.viewData.showCustomerUrl = '/customer';
    </script>
    <script src="@Html.FileVersionUrl(Links.Content.Scripts.Queue.Show_es5_min_js)"></script>
}