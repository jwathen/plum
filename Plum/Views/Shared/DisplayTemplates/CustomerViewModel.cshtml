@model Plum.ViewModels.Customer.CustomerViewModel
@{
    bool customerIsLastInline = Model.Customer.Queue.OrderedCustomers().Last() == Model.Customer;
}

<div class="modal-body button-stack">
    <div class="row">
        <div class="col-md-12">
            @if (!string.IsNullOrWhiteSpace(Model.Note))
            {
                <p>
                    Note: <em>@Model.Note</em>
                </p>
            }
            @if (Model.Customer.HasPhoneNumber())
            {
                <p>
                    <em>@Html.PhoneNumber(Model.PhoneNumber)</em>
                </p>
                using (Ajax.BeginForm(MVC.Customer.SendReadyMessage(Model.Id), new AjaxOptions { OnBegin = "setLoading", OnComplete = "clearLoading", UpdateTargetId = "ShowCustomerModal" }))
                {
                    <button class="btn btn-block btn-primary" type="submit">
                        <i class="fa fa-comment"></i>
                        Send &quot;Ready&quot; Message
                    </button>
                    @Html.AntiForgeryToken2()
                }
                using (Ajax.BeginForm(MVC.Customer.SendWelcomeMessage(Model.Id), new AjaxOptions { OnBegin = "setLoading", OnComplete = "clearLoading", UpdateTargetId = "ShowCustomerModal" }))
                {
                    <button class="btn btn-block btn-default" type="submit">
                        <i class="fa fa-comment-o"></i>
                        Resend &quot;Welcome&quot; Message
                    </button>
                    @Html.AntiForgeryToken2()
                }
                <a href="#" class="btn btn-default btn-block"
                   data-ajax-load="true"
                   data-ajax-load-target="#ShowCustomerModal"
                   data-ajax-load-url="@Url.Action(MVC.Customer.SendCustomMessage())">
                    <i class="fa fa-comment-o"></i>
                    Send Text message...
                </a>
            }
            else
            {
                <p>
                    <em>No phone number.</em>
                </p>
            }
            <form action="@Url.Action(MVC.Customer.Destroy(Model.Id))" method="post" data-loading-overlay="true">
                <button data-confirm="Are you sure?" data-confirm-prompt="Are you sure you want to remove @HttpUtility.HtmlAttributeEncode(Model.Name) from the list?" class="btn btn-block btn-default" type="submit">Remove From List</button>
                @Html.HttpMethodOverride(HttpVerbs.Delete)
                @Html.AntiForgeryToken2()
            </form>
            @if (!customerIsLastInline)
            {
                using (Ajax.BeginForm(MVC.Customer.MoveToEndOfList(Model.Id), new AjaxOptions { OnBegin = "setLoading", OnComplete = "clearLoading", UpdateTargetId = "ShowCustomerModal" }))
                {
                    <button class="btn btn-block btn-default" data-confirm="Are you sure?" data-confirm-prompt="Are you sure you want to move @HttpUtility.HtmlAttributeEncode(Model.Name) to the end of the list?" type="submit">
                        Move to End of List
                    </button>
                    @Html.AntiForgeryToken2()
                }
            }
            <a href="#" class="btn btn-default btn-block"
               data-ajax-load="true"
               data-ajax-load-target="#ShowCustomerModal"
               data-ajax-load-url="@Url.Action(MVC.Customer.Edit(Model.Id))">
                Edit Party
            </a>
            @if (Model.Customer.LogEntries.Any())
            {
                <h5>
                    History
                </h5>
                <div class="history">
                    @foreach (var entry in Model.Customer.LogEntries.OrderByDescending(x => x.Id))
                    {
                        <p>
                            <i class="fa @entry.Icon()"></i>
                            @entry.Message
                            <span class="text-muted text-nowrap">@entry.Age().Humanize() ago</span>
                        </p>
                    }
                </div>
            }
        </div>
    </div>
</div>
<script>
    initConfirmationModals('#ShowCustomerModal');
    initLoadingOverlays('#ShowCustomerModal');
</script>
